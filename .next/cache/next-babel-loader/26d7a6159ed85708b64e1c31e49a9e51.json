{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/blog/components/home-page/form.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Context } from \"~/context/context\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport axios from \"axios\";\n\nconst Form = ({\n  initialData\n}) => {\n  const {\n    setAllPosts,\n    setData,\n    data\n  } = useContext(Context);\n  const {\n    0: formData,\n    1: setFormData\n  } = useState({\n    title: (initialData === null || initialData === void 0 ? void 0 : initialData.title) || '',\n    body: (initialData === null || initialData === void 0 ? void 0 : initialData.body) || ''\n  });\n  const {\n    title,\n    body\n  } = formData;\n  useEffect(() => {\n    setData({\n      title: (initialData === null || initialData === void 0 ? void 0 : initialData.title) || '',\n      body: (initialData === null || initialData === void 0 ? void 0 : initialData.body) || ''\n    });\n  }, []);\n\n  const handleChange = e => {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      [e.target.name]: e.target.value\n    }));\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const mutation = useMutation(async () => {\n    // eslint-disable-next-line no-useless-catch\n    try {\n      const response = await axios.post(\"https://jsonplaceholder.typicode.com/posts\", {\n        title: title,\n        body: body,\n        userId: 1\n      }, {\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }, {\n    onSuccess(data) {\n      console.log(\"Successful\", {\n        data\n      });\n      setFormData({\n        title: \"\",\n        body: \"\"\n      });\n    },\n\n    onError(error) {\n      console.log(\"Failed\", {\n        error\n      });\n    },\n\n    onSettled(res) {\n      setAllPosts(prev => [res, ...prev]);\n      console.log(\"Mutation completed.\");\n      setFormData({\n        title: \"\",\n        body: \"\"\n      });\n    }\n\n  });\n\n  async function handleSubmitPost(e) {\n    e.preventDefault();\n    await mutation.mutateAsync();\n  }\n\n  return __jsx(\"form\", {\n    onSubmit: handleSubmitPost,\n    className: \"w-full d-rtl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"flex-grow px-2 pt-3 pb-1 relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"px-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    placeholder: \"\\u0639\\u0646\\u0648\\u0627\\u0646 \\u067E\\u0633\\u062A\",\n    value: title,\n    onChange: handleChange,\n    className: \"bg-transparent w-full focus:outline-none text-white bg-dark-lighter text-lg py-2 px-2 rounded-md\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  })), __jsx(\"div\", {\n    className: \"px-2 mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, __jsx(\"textarea\", {\n    name: \"body\",\n    placeholder: \"\\u062A\\u0648\\u0636\\u06CC\\u062D\\u0627\\u062A\",\n    value: body,\n    onChange: handleChange,\n    className: \"bg-transparent w-full focus:outline-none text-white bg-dark-lighter text-lg pb-1 px-2 py-1 rounded-md\",\n    rows: 4,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  })), !initialData && __jsx(\"div\", {\n    className: \"flex flex-wrap justify-end mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, __jsx(\"button\", {\n    type: \"submit\",\n    disabled: title.length === 0 || body.length === 0,\n    className: `text-white px-4 py-2 shadow-sm focus:outline-none font-bold bg-primary rounded-lg ${title.length === 0 || body.length === 0 ? \"cursor-not-allowed opacity-50\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, \"Post\")))));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/macbook/Documents/blog/components/home-page/form.tsx"],"names":["React","useState","useContext","useEffect","Context","useMutation","axios","Form","initialData","setAllPosts","setData","data","formData","setFormData","title","body","handleChange","e","target","name","value","mutation","response","post","userId","headers","error","onSuccess","console","log","onError","onSettled","res","prev","handleSubmitPost","preventDefault","mutateAsync","length"],"mappings":"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","sourcesContent":["import React, {useState, ChangeEvent, useContext, useEffect} from \"react\";\nimport {Context} from \"~/context/context\";\nimport {ContextType,FormData} from \"~/types/static\";\nimport {useMutation} from \"@tanstack/react-query\";\nimport axios from \"axios\";\n\ninterface FormProps {\n    onSubmit?: (data: FormData) => void;\n    initialData?: any[];\n}\nconst Form: React.FC<FormProps> = ({initialData}) => {\n    const { setAllPosts,setData,data } = useContext(Context) as ContextType;\n\n    const [formData, setFormData] = useState<FormData>({\n        title: initialData?.title || '',\n        body: initialData?.body|| '',\n    });\n\n    const { title, body } = formData;\n\n\n    useEffect(()=>{\n        setData({\n            title: initialData?.title || '',\n            body: initialData?.body || ''\n        })\n    },[])\n\n\n    const handleChange = (\n        e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n    ) => {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value,\n        });\n        setData({\n            ...data,\n            [e.target.name]: e.target.value,\n        })\n    };\n\n    const mutation = useMutation(\n        async () => {\n            // eslint-disable-next-line no-useless-catch\n            try {\n                const response = await axios.post(\n                    \"https://jsonplaceholder.typicode.com/posts\",\n                    {\n                        title: title,\n                        body: body,\n                        userId: 1\n                    },\n                    {\n                        headers: {\n                            \"Content-type\": \"application/json; charset=UTF-8\",\n                        },\n                    }\n                );\n                return response.data;\n            } catch (error) {\n                throw error;\n            }\n        },\n        {\n            onSuccess(data) {\n                console.log(\"Successful\", {data});\n                setFormData({title: \"\",\n                    body: \"\",})\n            },\n            onError(error) {\n                console.log(\"Failed\", {error});\n            },\n            onSettled(res) {\n                setAllPosts((prev)=>[res,...prev])\n                console.log(\"Mutation completed.\");\n                setFormData({title: \"\",\n                    body: \"\",})\n            },\n        }\n    );\n\n    async function handleSubmitPost(e:React.FormEvent) {\n        e.preventDefault();\n        await mutation.mutateAsync();\n    }\n\n    return (\n        <form onSubmit={handleSubmitPost} className=\"w-full d-rtl\">\n            <div className=\"flex-grow px-2 pt-3 pb-1 relative\">\n                <div className=\"px-2\">\n                    <input\n                        type=\"text\"\n                        name=\"title\"\n                        placeholder=\"عنوان پست\"\n                        value={title}\n                        onChange={handleChange}\n                        className=\"bg-transparent w-full focus:outline-none text-white bg-dark-lighter text-lg py-2 px-2 rounded-md\"\n                        required\n                    />\n                </div>\n                <div className=\"px-2 mt-3\">\n          <textarea\n              name=\"body\"\n              placeholder=\"توضیحات\"\n              value={body}\n              onChange={handleChange}\n              className=\"bg-transparent w-full focus:outline-none text-white bg-dark-lighter text-lg pb-1 px-2 py-1 rounded-md\"\n              rows={4}\n              required\n          />\n                </div>\n                {!initialData &&(\n                    <div className=\"flex flex-wrap justify-end mt-5\">\n                        <div className=\"\">\n                            <button\n                                type=\"submit\"\n                                disabled={title.length === 0 || body.length === 0}\n                                className={`text-white px-4 py-2 shadow-sm focus:outline-none font-bold bg-primary rounded-lg ${\n                                    title.length === 0 || body.length === 0\n                                        ? \"cursor-not-allowed opacity-50\"\n                                        : \"\"\n                                }`}\n                            >\n                                Post\n                            </button>\n                        </div>\n                    </div>\n                ) }\n            </div>\n        </form>\n    );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/blog/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState } from \"react\";\nimport { Hydrate, QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport '~/css/tailwind.css';\nimport '~/css/main.css';\nimport Provider from \"~/context/context\";\nimport Layout from \"~/components/layout\";\n\nconst MyApp = ({\n  Component,\n  pageProps,\n  hideLayout\n}) => {\n  const {\n    0: queryClient\n  } = useState(() => new QueryClient());\n  return __jsx(Provider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, __jsx(QueryClientProvider, {\n    client: queryClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }\n  }, __jsx(Hydrate, {\n    state: pageProps.dehydratedState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Layout, {\n    hideLayout: hideLayout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 6\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 6\n    }\n  }))))));\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/macbook/Documents/blog/pages/_app.tsx"],"names":["React","useState","Hydrate","QueryClient","QueryClientProvider","Provider","Layout","MyApp","Component","pageProps","hideLayout","queryClient","dehydratedState"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SACCC,OADD,EAECC,WAFD,EAGCC,mBAHD,QAIO,uBAJP;AAKA,OAAO,oBAAP;AACA,OAAO,gBAAP;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAMA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAD,KAAyC;AAC5E,QAAM;AAAA,OAACC;AAAD,MAAgBV,QAAQ,CAAC,MAAM,IAAIE,WAAJ,EAAP,CAA9B;AACA,SACC,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,mBAAD;AAAqB,IAAA,MAAM,EAAEQ,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,OAAD;AAAS,IAAA,KAAK,EAAEF,SAAS,CAACG,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAEF,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADA,CADD,CADD,CADD,CADD;AAWA,CAbD;;AAeA,eAAeF,KAAf","sourcesContent":["import React, {useState} from \"react\";\nimport {\n\tHydrate,\n\tQueryClient,\n\tQueryClientProvider\n} from \"@tanstack/react-query\";\nimport '~/css/tailwind.css';\nimport '~/css/main.css';\nimport Provider from \"~/context/context\";\nimport Layout from \"~/components/layout\";\ninterface MyAppProps {\n\tComponent: React.ComponentType<any>;\n\tpageProps: any;\n\thideLayout?: boolean\n}\nconst MyApp: React.FC<MyAppProps> = ({ Component, pageProps ,hideLayout}) => {\n\tconst [queryClient] = useState(() => new QueryClient());\n\treturn (\n\t\t<Provider>\n\t\t\t<QueryClientProvider client={queryClient}>\n\t\t\t\t<Hydrate state={pageProps.dehydratedState}>\n\t\t\t\t\t<Layout hideLayout={hideLayout}>\n\t\t\t\t\t<Component {...pageProps} />\n\t\t\t\t\t</Layout>\n\t\t\t\t</Hydrate>\n\t\t\t</QueryClientProvider>\n\t\t</Provider>\n\t);\n};\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}
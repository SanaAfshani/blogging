import type { InfiniteData, QueryFunction, SetDataOptions, UseInfiniteQueryOptions, UseInfiniteQueryResult } from '@tanstack/react-query';
import type { Updater } from '@tanstack/react-query/build/types/packages/query-core/src/utils';
import type { AdditionalCreateOptions, AdditionalQueryHookOptions, ExposeMethods, QueryKitKey } from './types';
interface CreateInfiniteQueryOptions<TFnData, TVariables, Error> extends Omit<UseInfiniteQueryOptions<TFnData, Error, unknown, TFnData, QueryKitKey<TVariables>>, 'queryKey' | 'queryFn' | 'enabled' | 'select'>, AdditionalCreateOptions<TFnData, TVariables> {
}
declare type InfiniteQueryHookOptions<TFnData, Error, TData, TVariables> = Omit<UseInfiniteQueryOptions<TFnData, Error, TData, TFnData, QueryKitKey<TVariables>>, 'queryKey' | 'queryFn' | 'enabled'> & AdditionalQueryHookOptions<TFnData, TVariables>;
interface InfiniteQueryHook<TFnData, TVariables = void, Error = unknown> extends ExposeMethods<TFnData, TVariables> {
    <TData = TFnData>(options: TVariables extends void ? InfiniteQueryHookOptions<TFnData, Error, TData, TVariables> | void : InfiniteQueryHookOptions<TFnData, Error, TData, TVariables>): UseInfiniteQueryResult<TData, Error> & {
        setData: (updater: Updater<InfiniteData<TFnData> | undefined, InfiniteData<TFnData> | undefined>, options?: SetDataOptions) => InfiniteData<TFnData> | undefined;
    };
}
export declare function createInfiniteQuery<TFnData, TVariables = void, Error = unknown>(options: CreateInfiniteQueryOptions<TFnData, TVariables, Error>): InfiniteQueryHook<TFnData, TVariables, Error>;
export declare function createInfiniteQuery<TFnData, TVariables = void, Error = unknown>(primaryKey: string, options?: Omit<CreateInfiniteQueryOptions<TFnData, TVariables, Error>, 'primaryKey'>): InfiniteQueryHook<TFnData, TVariables, Error>;
export declare function createInfiniteQuery<TFnData, TVariables = void, Error = unknown>(primaryKey: string, queryFn: QueryFunction<TFnData, QueryKitKey<TVariables>>, options?: Omit<CreateInfiniteQueryOptions<TFnData, TVariables, Error>, 'primaryKey' | 'queryFn'>): InfiniteQueryHook<TFnData, TVariables, Error>;
export {};
